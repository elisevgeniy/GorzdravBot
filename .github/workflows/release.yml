name: Release and Push

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  release-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1.9.0
        with:
          token: ${{ github.token }}
          branch: master
          noNewCommitBehavior: warn
          noVersionBumpBehavior: warn

      - name: Rename jar file
        run: "cp target/GorzdravBot-0.0.1-SNAPSHOT.jar GorzdravBot-${{ steps.semver.outputs.next }}.jar"

      - name: Create Release
        uses: ncipollo/release-action@v1.15.0
        with:
          name: ${{ env.GITHUB_REF_NAME }}
          tag: ${{ steps.semver.outputs.next }}
          artifacts: "GorzdravBot-${{ steps.semver.outputs.next }}.jar"
          token: ${{ github.token }}
          draft: false
          makeLatest: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: "type=semver,pattern={{version}},value=${{ steps.semver.outputs.next }}"

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true